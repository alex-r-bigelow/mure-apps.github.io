{"version":3,"file":"svgLibraryLoader.js","sources":["webpack:///webpack/bootstrap a200d0c0bc0610eb902e?ca3f","webpack:///./mure-library/svgLibraryLoader.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a200d0c0bc0610eb902e","'use strict';\n\n/* globals XMLHttpRequest, ActiveXObject */\n/* eslint no-eval: 0 */\nfunction load(url, callback) {\n  var xhr = void 0;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    xhr = new XMLHttpRequest();\n  } else {\n    var versions = ['MSXML2.XmlHttp.5.0', 'MSXML2.XmlHttp.4.0', 'MSXML2.XmlHttp.3.0', 'MSXML2.XmlHttp.2.0', 'Microsoft.XmlHttp'];\n    for (var i = 0, len = versions.length; i < len; i++) {\n      try {\n        xhr = new ActiveXObject(versions[i]);\n        break;\n      } catch (e) {}\n    }\n  }\n\n  xhr.onreadystatechange = ensureReadiness;\n\n  function ensureReadiness() {\n    if (xhr.readyState < 4) {\n      return;\n    }\n\n    if (xhr.status !== 200) {\n      return;\n    }\n\n    // all is well\n    if (xhr.readyState === 4) {\n      callback(xhr.responseText);\n    }\n  }\n\n  xhr.open('GET', url, true);\n  xhr.send('');\n}\n\nfunction loadLibraries(callback) {\n  // Grab all the mure:library tags, and load the referenced library (script src attributes\n  // in SVG don't work, so we have to manually load remote libraries)\n  var libraries = Array.from(document.getElementsByTagNameNS('http://mure-apps.github.io', 'library')).map(function (libraryTag) {\n    return libraryTag.getAttribute('src');\n  });\n\n  // This is a funky check to see whether we're actually debugging mure.js locally, or if\n  // this is the normal use case where we should just stick with the hosted version\n  var mureLibraryIndex = libraries.indexOf('https://mure-apps.github.io/docs/mure.min.js');\n  if (mureLibraryIndex !== -1) {\n    var parentLibraries = [];\n    if (window.parent !== window) {\n      parentLibraries = Array.from(window.parent.document.getElementsByTagName('script')).filter(function (scriptTag) {\n        return scriptTag.getAttribute('src') === 'mure.js';\n      });\n    }\n    if (parentLibraries.length !== 0) {\n      // swap the hosted library for the debugging one\n      libraries[mureLibraryIndex] = 'mure.js';\n    }\n  }\n\n  var loadedLibraries = {};\n  var onloadFired = false;\n\n  libraries.forEach(function (script) {\n    load(script, function (scriptText) {\n      eval(scriptText);\n      loadedLibraries[script] = true;\n      attemptStart();\n    });\n  });\n\n  window.onload = function () {\n    onloadFired = true;\n    attemptStart();\n  };\n\n  function attemptStart() {\n    if (!onloadFired) {\n      return;\n    }\n    var allLoaded = libraries.every(function (script) {\n      return loadedLibraries[script];\n    });\n    if (allLoaded) {\n      callback();\n    }\n  }\n}\n\nfunction runUserScripts() {\n  Array.from(document.getElementsByTagNameNS('http://mure-apps.github.io', 'script')).forEach(function (scriptTag) {\n    return eval(scriptTag.textContent);\n  });\n}\n\nloadLibraries(runUserScripts);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./mure-library/svgLibraryLoader.js\n// module id = 4\n// module chunks = 1"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}