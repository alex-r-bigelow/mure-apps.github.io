<svg version="1.1" xmlns="http://www.w3.org/2000/svg" width="600" height="1920">
  <metadata id="mure">
    <mure xmlns="http://mure-apps.github.io">
      <library src="https://d3js.org/d3.v4.min.js"></library>
      <library src="https://code.jquery.com/jquery-2.2.4.min.js"></library>
      <script>
        <![CDATA[
          function logData (element) {
            console.log(mureInteractivity.getData(element));
          }

          var KEY = { w: 87, a: 65, s: 83, d: 68 };
          var moveSpeed = 10;
          var circle = d3.select('circle');
          var x = parseInt(circle.attr('cx'));
          var y = parseInt(circle.attr('cy'));
          jQuery(document).on('keydown', function (evt) {
            switch (evt.keyCode) {
              case KEY.w:
                circle.attr('cy', y -= moveSpeed);
                break;
              case KEY.s:
                circle.attr('cy', y += moveSpeed);
                break;
              case KEY.a:
                circle.attr('cx', x -= moveSpeed);
                break;
              case KEY.d:
                circle.attr('cx', x += moveSpeed);
                break;
            }
          });
        ]]>
      </script>
      <scale id="xScale">
        <![CDATA[
          d3.scaleBand()
            .domain(['Cake','Raised','Buttermilk','Bar','Twist','Filled'])
            .range([100, 600]);
        ]]>
      </scale>
      <constraint id="rectX">
        <![CDATA[
          graphic.attr('x', xScale(data.name));
        ]]>
      </constraint>
      <scale id="yScale">
        <![CDATA[
          d3.scaleLinear()
            .domain([0,1])
            .range([500, 0]);
        ]]>
      </scale>
      <constraint id="rectY">
        <![CDATA[
          graphic.attr('y', 500 - yScale(data.name));
        ]]>
      </constraint>
      <constraint id="rectHeight">
        <![CDATA[
          graphic.attr('height', yScale(data.name));
        ]]>
      <constraint id="rectWidth">
        <![CDATA[
          graphic.attr('width', 40);
        ]]>
      </constraint>
      </constraint>
      <binding data="datasets['donuts.xml'][items]" graphic="rect1">
        <constraint>rectX</constraint>
        <constraint>rectY</constraint>
        <constraint>rectHeight</constraint>
        <constraint>rectWidth</constraint>
      </binding>
      <dataset id="donuts" src="donuts.xml"></dataset>
    </mure>
    <script id="mureInteractivityRunner" type="text/javascript">
      <![CDATA[
        var mureInteractivity = {
          getData: function () {
            return 'TODO';
          }
        };

        (function () {
          function load (url, callback) {
            let xhr;
            if (typeof XMLHttpRequest !== 'undefined') {
              xhr = new XMLHttpRequest();
            } else {
              let versions = [
                'MSXML2.XmlHttp.5.0',
                'MSXML2.XmlHttp.4.0',
                'MSXML2.XmlHttp.3.0',
                'MSXML2.XmlHttp.2.0',
                'Microsoft.XmlHttp'
              ];
              for (let i = 0, len = versions.length; i < len; i++) {
                try {
                  xhr = new ActiveXObject(versions[i]);
                  break;
                } catch (e) {}
              }
            }

            xhr.onreadystatechange = ensureReadiness;

            function ensureReadiness () {
              if (xhr.readyState < 4) {
                return;
              }

              if (xhr.status !== 200) {
                return;
              }

              // all is well
              if (xhr.readyState === 4) {
                callback(xhr.responseText);
              }
            }

            xhr.open('GET', url, true);
            xhr.send('');
          }

          function loadUserLibraries (callback) {
            // Grab all the mure:library tags, and load the referenced library (script src attributes
            // in SVG don't work, so we have to manually load remote libraries)
            let libraries = Array.from(document.getElementsByTagNameNS('http://mure-apps.github.io', 'library'))
              .map(libraryTag => libraryTag.getAttribute('src'));

            let loadedLibraries = {};
            let onloadFired = false;

            libraries.forEach(function (script) {
              load(script, function (scriptText) {
                window.eval(scriptText);
                loadedLibraries[script] = true;
                attemptStart();
              });
            });

            window.onload = function () {
              onloadFired = true;
              attemptStart();
            };

            function attemptStart () {
              if (!onloadFired) {
                return;
              }
              let allLoaded = libraries.every(script => {
                return loadedLibraries[script];
              });
              if (allLoaded) {
                callback();
              }
            }
          }

          function runUserScripts () {
            Array.from(document.getElementsByTagNameNS('http://mure-apps.github.io', 'script'))
              .forEach(scriptTag => window.eval(scriptTag.textContent));
          }

          // Where we actually start executing stuff:
          if (window.parent !== window && window.parent.mure) {
            // This SVG is getting edited in a mure app! In that case, the parent mure library
            // is responsible to figure out whether or not our libraries / scripts should
            // even be loaded
            window.parent.mure.signalSvgLoaded(loadUserLibraries, runUserScripts);
          } else {
            // We've been loaded directly into a browser, or embedded in a normal page;
            // load all the libraries, and then run all the scripts
            loadUserLibraries(runUserScripts);
          }
        })();
      ]]>
    </script>
  </metadata>
  <circle cx="250" cy="250" r="50" fill="transparent" stroke="lightGrey" onclick="logData(this)"/>
</svg>
